name: SonarCloud Analysis

on:
  push:
    branches:
      - chite  # Asegúrate de que la rama correcta esté especificada

jobs:
  sonarcloud-analysis:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}/Doc2Markdown

    steps:
      # Paso 1: Checkout del código
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Paso 2: Configurar Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Paso 3: Instalar dependencias
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r Doc2Markdown/requirements.txt
          pip install pytest pytest-cov sqlalchemy pyodbc

      # Paso 4: Instalar y configurar ODBC Driver 17 (Paso dedicado a ODBC)
      - name: Install and Configure ODBC Driver 17
        run: |
          # Instalar dependencias del sistema
          sudo apt-get update
          sudo apt-get install -y gnupg2 unixodbc-dev

          # Eliminar las claves antiguas si existen
          sudo rm -f /usr/share/keyrings/microsoft-prod.gpg
          sudo rm -f /usr/share/keyrings/microsoft.gpg

          # Descargar y agregar la clave pública de Microsoft
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo tee /usr/share/keyrings/microsoft.gpg > /dev/null

          # Configurar el repositorio de Microsoft
          sudo sh -c 'echo "deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft.gpg] https://packages.microsoft.com/ubuntu/$(lsb_release -rs)/prod $(lsb_release -cs) main" > /etc/apt/sources.list.d/microsoft.list'

          # Instalar el driver ODBC y herramientas de SQL Server
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y msodbcsql17 mssql-tools

          # Configurar variables de entorno
          echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> $GITHUB_ENV
          echo 'export ODBCSYSINI=/etc' >> $GITHUB_ENV

          # Verificar la instalación del driver ODBC
          odbcinst -q -d -n "ODBC Driver 17 for SQL Server"

      # Paso 5: Configurar Java
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Paso 6: Instalar SonarScanner
      - name: Install SonarScanner
        run: |
          SONAR_SCANNER_VERSION="5.0.1.3006"
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${SONAR_SCANNER_VERSION}-linux.zip
          unzip sonar-scanner-cli-${SONAR_SCANNER_VERSION}-linux.zip
          sudo mv sonar-scanner-${SONAR_SCANNER_VERSION}-linux /opt/sonar-scanner
          echo "$(/opt/sonar-scanner/bin/sonar-scanner --version)"

      # Paso 7: Ejecutar pruebas
      - name: Run tests with coverage
        run: |
          cd Doc2Markdown
          pytest tests/unit_tests \
            --cov=app \
            --cov-report=xml:report_coverage/coverage.xml \
            --cov-report=term

      # Paso 8: Análisis SonarCloud (VERSIÓN CORREGIDA)
      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          /opt/sonar-scanner/bin/sonar-scanner \
            -Dsonar.projectKey=jaimeflores_doc2markdown \
            -Dsonar.organization=jaimeflores \
            -Dsonar.sources=app \
            -Dsonar.tests=tests \
            -Dsonar.python.coverage.reportPaths=report_coverage/coverage.xml \
            -Dsonar.language=py \
            -Dsonar.python.version=3.10 \
            -Dsonar.working.directory=${{ github.workspace }}/.scannerwork \
            -Dsonar.scm.disabled=true
