name: SonarCloud Analysis

on:
  push:
    branches:
      - chite  # Asegúrate de que la rama correcta esté especificada

jobs:
  sonarcloud-analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$(pwd)/Doc2Markdown" >> $GITHUB_ENV

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential unixodbc-dev

      - name: Install Java 17
        run: |
          sudo apt update
          sudo apt install -y openjdk-17-jdk
          java -version

      - name: Install SonarScanner
        run: |
          curl -L "https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-6.2.1.4610-linux-x64.zip" -o sonar-scanner-linux.zip
          unzip sonar-scanner-linux.zip -d /opt
          sudo ln -s /opt/sonar-scanner-6.2.1.4610-linux-x64/bin/sonar-scanner /usr/local/bin/sonar-scanner
          sonar-scanner --version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov  # Asegúrate de que pytest y pytest-cov estén instalados

      - name: Run tests and generate coverage report
        run: |
          pytest --cov=app --cov-report=xml:report_coverage/coverage.xml  # Genera el informe de cobertura en formato XML

      # Run SonarCloud Analysis 
      - name: Run SonarCloud Analysis 
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd Doc2Markdown/app
          sonar-scanner \
            -Dsonar.projectKey=jaimeflores_doc2markdown \
            -Dsonar.organization=jaimeflores \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.python.coverage.reportPaths=report_coverage/coverage.xml  # Asegúrate de que la ruta del archivo de cobertura sea correcta
